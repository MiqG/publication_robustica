"""
Workflow purpose
----------------
Study the computed robust independent components.

"""

import os
import numpy as np

##### VARIABLES #####
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
DATA_DIR = os.path.join(ROOT,'data')
RAW_DIR = os.path.join(DATA_DIR,'raw')
PREP_DIR = os.path.join(DATA_DIR,'prep')
RESULTS_DIR = os.path.join(ROOT,'results','case_study')

DATASETS = ['LGG','Sastry2019']
MSIGDB_DIR = os.path.join(RAW_DIR,'MSigDB','msigdb_v7.4','msigdb_v7.4_files_to_download_locally','msigdb_v7.4_GMTs')
ALGORITHMS = ['icasso','robustica_pca']
N_GENES = {
    'LGG': list(np.arange(500,20000,500)) + [20224],
    'Sastry2019': list(np.arange(200,3900,200)) + [3923]
}

##### RULES #####
rule all:
    input:
        # benchmark ICA with different dataset sizes
        ## LGG
        expand(os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','{n_genes}','{algorithm}','S.tsv.gz'),
               algorithm=ALGORITHMS, dataset=['LGG'], n_genes=N_GENES['LGG']),
        # Sastry2019
        expand(os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','{n_genes}','{algorithm}','S.tsv.gz'),
               algorithm=ALGORITHMS, dataset=['Sastry2019'], n_genes=N_GENES['Sastry2019']),
        ## merge stats by dataset
        expand(os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','stats_merged.tsv.gz'), dataset=DATASETS),
        ## plot
        expand(os.path.join(RESULTS_DIR,'figures','benchmark_ngenes','{dataset}'),dataset=DATASETS),
        
        # Explore case study
        ## cluster components
        expand(os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','{algorithm}','S.tsv.gz'), algorithm=ALGORITHMS, dataset=['LGG']),
        ## make figures
        expand(os.path.join(RESULTS_DIR,'figures','interpretation','{dataset}'), dataset=['LGG'])
        
        
rule benchmark_ica_ngenes:
    input:
        S_all = os.path.join(PREP_DIR,'ica_runs','{dataset}','S.pickle.gz'),
        A_all = os.path.join(PREP_DIR,'ica_runs','{dataset}','A.pickle.gz')
    output:
        S = os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','{n_genes}','{algorithm}','S.tsv.gz'),
        A = os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','{n_genes}','{algorithm}','A.tsv.gz'),
        stats = os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','{n_genes}','{algorithm}','stats.tsv.gz')
    params:
        n_components = 100,
        robust_runs = 100,
        algorithm = '{algorithm}',
        n_genes = '{n_genes}'
    shell:
        """
        python scripts/cluster_ica_runs.py \
                    --S_all_file={input.S_all} \
                    --A_all_file={input.A_all} \
                    --S_file={output.S} \
                    --A_file={output.A} \
                    --stats_file={output.stats} \
                    --n_components={params.n_components} \
                    --robust_runs={params.robust_runs} \
                    --algorithm={params.algorithm} \
                    --n_genes={params.n_genes}
        """
        
        
rule combine_benchmarks_ngenes:
    input:
        lambda wildcards:[
            os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes',
                      '{dataset}','{n_genes}','{algorithm}','stats.tsv.gz'
                     ).format(dataset='{dataset}', n_genes=n_genes, algorithm=algorithm)
            for n_genes in N_GENES[wildcards.dataset]
            for algorithm in ALGORITHMS
        ]
    output:
        os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','{dataset}','stats_merged.tsv.gz')
    run:
        import os
        import pandas as pd
        df = pd.concat([pd.read_table(f).assign(algorithm=os.path.basename(os.path.dirname(f)))
                        for f in input])
        df.to_csv(output[0], sep='\t', compression='gzip', index=False)
            

rule figures_benchmark_ngenes:
    input:
        stats = os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','stats_merged.tsv.gz'),
        S_icasso = os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','LGG','20224','icasso','S.tsv.gz'),
        S_robustica = os.path.join(RESULTS_DIR,'files','benchmark_ica_ngenes','LGG','20224','robustica_pca','S.tsv.gz')
    params:
        dataset = '{dataset}'
    output:
        directory(os.path.join(RESULTS_DIR,'figures','benchmark_ngenes','{dataset}'))
    shell:
        """
        Rscript scripts/figures_benchmark_ngenes.R \
                    --stats_file={input.stats} \
                    --S_icasso_file={input.S_icasso} \
                    --S_robustica_file={input.S_robustica} \
                    --dataset={params.dataset} \
                    --figs_dir={output}
        """
            
rule case_study_ica:
    input:
        S_all = os.path.join(PREP_DIR,'ica_runs','{dataset}','S.pickle.gz'),
        A_all = os.path.join(PREP_DIR,'ica_runs','{dataset}','A.pickle.gz')
    output:
        S = os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','{algorithm}','S.tsv.gz'),
        A = os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','{algorithm}','A.tsv.gz'),
        stats = os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','{algorithm}','stats.tsv.gz')
    params:
        n_components = 100,
        robust_runs = 100,
        algorithm = '{algorithm}'
    shell:
        """
        python scripts/cluster_ica_runs.py \
                    --S_all_file={input.S_all} \
                    --A_all_file={input.A_all} \
                    --S_file={output.S} \
                    --A_file={output.A} \
                    --stats_file={output.stats} \
                    --n_components={params.n_components} \
                    --robust_runs={params.robust_runs} \
                    --algorithm={params.algorithm}
        """
        
        
rule figures_case_study:
    input:
        S = os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','robustica_pca','S.tsv.gz'),
        A = os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','robustica_pca','A.tsv.gz'),
        stats = os.path.join(RESULTS_DIR,'files','cluster_iterations','{dataset}','robustica_pca','stats.tsv.gz'),
        genexpr = os.path.join(PREP_DIR,'genexpr','{dataset}.tsv.gz'),
        snv = os.path.join(PREP_DIR,'snv','{dataset}.tsv.gz'),
        metadata = os.path.join(PREP_DIR,'metadata','{dataset}.tsv'),
        sample_indices = os.path.join(PREP_DIR,'sample_indices','{dataset}.tsv'),
        msigdb_dir = MSIGDB_DIR
    output:
        directory(os.path.join(RESULTS_DIR,'figures','interpretation','{dataset}'))
    shell:
        """
        Rscript scripts/figures_interpret_case_study.R \
                    --S_file={input.S} \
                    --A_file={input.A} \
                    --genexpr_file={input.genexpr} \
                    --snv_file={input.snv} \
                    --metadata_file={input.metadata} \
                    --stats_file={input.stats} \
                    --sample_indices_file={input.sample_indices} \
                    --msigdb_dir={input.msigdb_dir} \
                    --figs_dir={output}
        """
        
