"""
Workflow purpose
----------------
Evaluate the impact of using different parameters to compute robust ICA.

Outline
-------
1. Compute ICA 100 times with different tol and max_iter parameters and save:
    - running time of every run
    - number of iterations per run
    - convergence
    - clusters
2. make figures
"""

import os

##### VARIABLES #####
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
DATA_DIR = os.path.join(ROOT,'data')
RAW_DIR = os.path.join(DATA_DIR,'raw')
PREP_DIR = os.path.join(DATA_DIR,'prep')
RESULTS_DIR = os.path.join(ROOT,'results','benchmark_tol_vs_maxiter')

DATASETS = ['LGG','Sastry2019']
ITERATIONS = 100
TOLS = ['1e-%s' % t for t in [1,2,3,4,5,6,7,8]]
MAX_ITERS = [str(int(m)) for m in [100,200,500,1e3,1e4]]
MAX_VARIANCE_EXPLAINED = {
    'LGG':0.9,
    'Sastry2019':0.99
}
REFERENCES = {
    'Sastry2019': os.path.join(PREP_DIR,'ica','Sastry2019-S.tsv.gz'),
    'LGG': 'NA'
}

##### RULES #####
rule all:
    input:
        # evaluate ica iterations
        expand(os.path.join(RESULTS_DIR,'files','evaluate_iterations-{dataset}_{max_iter}_{tol}'), max_iter=MAX_ITERS, tol=TOLS, dataset=DATASETS),
        
        # make figures
        #expand(os.path.join(RESULTS_DIR,'figures','{dataset}'), dataset=DATASETS)
        

rule evaluate_ica_iterations:
    input:
        os.path.join(PREP_DIR,'genexpr','{dataset}.tsv.gz')
    output:
        directory(os.path.join(RESULTS_DIR,'files','evaluate_iterations-{dataset}_{max_iter}_{tol}'))
    params:
        iterations = ITERATIONS,
        max_iter = '{max_iter}',
        tol = '{tol}',
        max_variance_explained = lambda wildcards: MAX_VARIANCE_EXPLAINED[wildcards.dataset]
    threads: 15
    shell:
        """
        python scripts/evaluate_ica_iterations.py \
                    --input_file={input} \
                    --output_dir={output} \
                    --iterations={params.iterations} \
                    --max_iter={params.max_iter} \
                    --tol={params.tol} \
                    --n_jobs={threads} \
                    --max_variance_explained={params.max_variance_explained}
        """

        
rule figures_benchmark_robustica:
    input:
        [os.path.join(RESULTS_DIR,'files','evaluate_iterations-{dataset}_{max_iter}_{tol}')\
         .format(dataset='{dataset}', max_iter=m, tol=t)
         for m in MAX_ITERS for t in TOLS]
    output:
        directory(os.path.join(RESULTS_DIR,'figures','{dataset}'))
    params:
        dataset = '{dataset}',
        S_ref =  lambda wildcards: REFERENCES[wildcards.dataset]
    shell:
        """
        Rscript scripts/figures_benchmark_robustica.R \
                    --evaluation_dirs='{input}' \
                    --figs_dir={output} \
                    --S_ref_file={params.S_ref} \
                    --dataset={params.dataset}
        """